<?php

/**
 * This is the model base class for the table "article_to_page".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "ArticleToPage".
 *
 * Columns in table "article_to_page" available as properties of the model,
 * followed by relations of table "article_to_page" available as properties of the model.
 *
 * @property integer $article_to_menu_id
 * @property integer $menu_in_language_id
 * @property integer $article_id
 * @property integer $priority
 *
 * @property Article $article
 * @property Page $menuInLanguage
 */
abstract class BaseArticleToPage extends GxActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'article_to_page';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'ArticleToPage|ArticleToPages', $n);
	}

	public static function representingColumn() {
		return 'article_to_menu_id';
	}

	public function rules() {
		return array(
			array('menu_in_language_id, article_id', 'required'),
			array('menu_in_language_id, article_id, priority', 'numerical', 'integerOnly'=>true),
			array('priority', 'default', 'setOnEmpty' => true, 'value' => null),
			array('article_to_menu_id, menu_in_language_id, article_id, priority', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
			'article' => array(self::BELONGS_TO, 'Article', 'article_id'),
			'menuInLanguage' => array(self::BELONGS_TO, 'Page', 'menu_in_language_id'),
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'article_to_menu_id' => Yii::t('app', 'Article To Menu'),
			'menu_in_language_id' => null,
			'article_id' => null,
			'priority' => Yii::t('app', 'Priority'),
			'article' => null,
			'menuInLanguage' => null,
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('article_to_menu_id', $this->article_to_menu_id);
		$criteria->compare('menu_in_language_id', $this->menu_in_language_id);
		$criteria->compare('article_id', $this->article_id);
		$criteria->compare('priority', $this->priority);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}