<?php

/**
 * This is the model base class for the table "page".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "Page".
 *
 * Columns in table "page" available as properties of the model,
 * followed by relations of table "page" available as properties of the model.
 *
 * @property integer $page_id
 * @property string $page_name
 * @property integer $language_id
 * @property string $permalink
 * @property integer $menu_id
 * @property string $url
 * @property integer $is_active
 * @property integer $is_url
 *
 * @property ArticleToPage[] $articleToPages
 * @property Language $language
 * @property Cathegories $menu
 */
abstract class BasePage extends GxActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'page';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'Page|Pages', $n);
	}

	public static function representingColumn() {
		return 'page_name';
	}

	public function rules() {
		return array(
			array('page_name, language_id, permalink', 'required'),
			array('language_id, menu_id, is_active, is_url', 'numerical', 'integerOnly'=>true),
			array('page_name, permalink, url', 'length', 'max'=>255),
			array('menu_id, url, is_active, is_url', 'default', 'setOnEmpty' => true, 'value' => null),
			array('page_id, page_name, language_id, permalink, menu_id, url, is_active, is_url', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
			'articleToPages' => array(self::HAS_MANY, 'ArticleToPage', 'menu_in_language_id'),
			'language' => array(self::BELONGS_TO, 'ActiveLanguage', 'language_id'),
                        /** 
                         * @todo Connect <Cathegories> to the model
                         */
			/* 'menu' => array(self::BELONGS_TO, 'Cathegories', 'menu_id'), */
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'page_id' => Yii::t('app', 'Page'),
			'page_name' => Yii::t('app', 'Page Name'),
			'language_id' => null,
			'permalink' => Yii::t('app', 'Permalink'),
			'menu_id' => null,
			'url' => Yii::t('app', 'Url'),
			'is_active' => Yii::t('app', 'Is Active'),
			'is_url' => Yii::t('app', 'Is Url'),
			'articleToPages' => null,
			'language' => null,
			'menu' => null,
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('page_id', $this->page_id);
		$criteria->compare('page_name', $this->page_name, true);
		$criteria->compare('language_id', $this->language_id);
		$criteria->compare('permalink', $this->permalink, true);
		$criteria->compare('menu_id', $this->menu_id);
		$criteria->compare('url', $this->url, true);
		$criteria->compare('is_active', $this->is_active);
		$criteria->compare('is_url', $this->is_url);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}